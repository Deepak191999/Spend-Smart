{{!-- function showOptions() {
            var type = document.getElementById("type").value;
            var creditOptions = document.getElementById("creditOptions");
            var debitOptions = document.getElementById("debitOptions");

            if (type === "credit") {
                creditOptions.style.display = "block";
                debitOptions.style.display = "none";
            } else if (type === "debit") {
                creditOptions.style.display = "none";
                debitOptions.style.display = "block";
            }
        } --}}
        ====
                let formData= document.getElementById("transactionForm");
        formData.addEventListener('submit',(e) => {
            //e.preventDefault();

             let amount = document.getElementById("amount").value;
            let type = document.getElementById("type").value;
            let category = type === "credit" ? document.getElementById("creditCategory").value : document.getElementById("debitCategory").value;
            let description = document.getElementById("description").value;
            let date = document.getElementById("date").value;

                if (!amount || !type || !category || !description || !date) {
                    console.error("All fields are required.");
                    return;
                    }
            // Log the form data to the console
            console.log("Amount:", amount);
            
            console.log("Type:", type);
            console.log("Category:", category);
            console.log("Description:", description);
            console.log("Date:", date);

            formData.reset();
        })


        ---------------------------
        <h2>Trasaction bar page</h2>

    <div class="circular-progress" data-inner-circle-color="lightgrey" data-percentage="80" data-progress-color="crimson" data-bg-color="black">
  <div class="inner-circle"></div>
  <p class="percentage">0%</p>
</div>




<script>
    const circularProgress = document.querySelectorAll(".circular-progress");

Array.from(circularProgress).forEach((progressBar) => {
  const progressValue = progressBar.querySelector(".percentage");
  const innerCircle = progressBar.querySelector(".inner-circle");
  let startValue = 0,
    endValue = Number(progressBar.getAttribute("data-percentage")),
    speed = 50,
    progressColor = progressBar.getAttribute("data-progress-color");

  const progress = setInterval(() => {
    startValue++;
    progressValue.textContent = `${startValue}%`;
    progressValue.style.color = `${progressColor}`;

    innerCircle.style.backgroundColor = `${progressBar.getAttribute(
      "data-inner-circle-color"
    )}`;

    progressBar.style.background = `conic-gradient(${progressColor} ${
      startValue * 3.6
    }deg,${progressBar.getAttribute("data-bg-color")} 0deg)`;
    if (startValue === endValue) {
      clearInterval(progress);
    }
  }, speed);
});
</script>
</body>
</html>




<script>
    document.addEventListener("DOMContentLoaded", function() {
            const creditProgress = document.querySelector(".credit-progress");
            const debitProgress = document.querySelector(".debit-progress");

            const createCircularProgress = (progressBar, totalAmount, progressColor, totalTurnover) => {
                const progressValue = progressBar.querySelector(".percentage");
                const innerCircle = progressBar.querySelector(".inner-circle");

                let percentage = 0;
                if (totalTurnover > 0) {
                    percentage = (totalAmount / totalTurnover) * 100; // Calculate percentage of total turnover
                }

                let startValue = 0,
                    endValue = Math.round(percentage),
                    speed = 10; // Decreased speed value to make the progress bar load faster

                const progress = setInterval(() => {
                    startValue++;
                    progressValue.textContent = `${startValue}%`;
                    progressValue.style.color = `${progressColor}`;
                    innerCircle.style.backgroundColor = `lightgrey`;
                    progressBar.style.background = `conic-gradient(${progressColor} ${startValue * 3.6}deg, ${progressBar.getAttribute("data-bg-color")} 0deg)`;
                    if (startValue === endValue) {
                        clearInterval(progress);
                    }
                }, speed);
            };

            const totalTurnover = {{totalCredit}} + {{totalDebit}};
            createCircularProgress(creditProgress, {{totalCredit}}, "green", totalTurnover);
            createCircularProgress(debitProgress, {{totalDebit}}, "red", totalTurnover);
    })
  </script>



  ------------------------------------
  {{!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Statistics</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            color: #333;
            padding: 20px;
        }

        .circular-progress {
            width: 300px;
            height: 300px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px auto;
            position: relative;
            background: conic-gradient(
                #ff6384 0%,
                #36a2eb 0%,
                #ffcd56 0%,
                #4bc0c0 0%,
                #9966ff 0%,
                #f31c4a 0%,
                #053758 0%,
                #e6aa1d 0%,
                #24d574 0%,
                #4910bc 0%
                #ff9f40 0%
                #b3b3b3 0%
                );
        }

        .inner-circle {
            position: absolute;
            width: 260px;
            height: 260px;
            border-radius: 50%;
            background-color: lightgrey;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 10px;
        }

        .labels {
            margin-top: 20px;
            text-align: center;
        }

        .label {
            display: inline-block;
            margin: 10px;
            padding: 5px 10px;
            border-radius: 5px;
        }

        .food { background-color: #ff6384; color: white; }
        .clothes { background-color: #36a2eb; color: white; }
        .household { background-color: #ffcd56; color: white; }
        .health { background-color: #4bc0c0; color: white; }
        .pets { background-color: #9966ff; color: white; }
        .transport { background-color: #f31c4a; color: white; }
        .culture { background-color: #053758; color: white; }
        .apparel { background-color: #e6aa1d; color: white; }
        .beauty { background-color: #24d574; color: white; }
        .education { background-color: #4910bc; color: white; }
        .gift { background-color: #ff9f40; color: white; }
        .other { background-color: #b3b3b3; color: white; }
    </style>
</head>
<body>
    {{> navbar}}

    <h2>Total Expenses: {{totalExpense}}</h2>

    <div class="circular-progress">
        <div class="inner-circle">
            <p>Expense Breakdown</p>
        </div>
    </div>

    <div class="labels">
        {{#each expensePercentage}}
            <span class="label" style="background-color: {{getColor @key}};">{{@key}}: {{this}}%</span>
        {{/each}}
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const expensePercentage = {{{json expensePercentage}}};

            const colors = {
                Food: '#ff6384',
                Clothes: '#36a2eb',
                Household: '#ffcd56',
                Health: '#4bc0c0',
                Pets: '#9966ff',
                Transport: '#f31c4a',
                Culture: '#053758',
                Apparel: '#e6aa1d',
                Beauty: '#24d574',
                Education: '#4910bc',
                Gift: '#ff9f40',
                Other: '#b3b3b3'
            };

            let gradientStops = [];
            let accumulatedPercentage = 0;

            for (const [category, percentage] of Object.entries(expensePercentage)) {
                const color = colors[category] || colors['Other'];
                const stopStart = accumulatedPercentage;
                accumulatedPercentage += parseFloat(percentage);
                const stopEnd = accumulatedPercentage;

                gradientStops.push(`${color} ${stopStart}% ${stopEnd}%`);
            }

            const gradient = `conic-gradient(${gradientStops.join(', ')})`;

            document.querySelector('.circular-progress').style.background = gradient;
        });
    </script>
</body>
</html> --}}