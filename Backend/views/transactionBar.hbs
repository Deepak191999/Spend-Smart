{{!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
 body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
        }

:root {
  --progress-bar-width: 200px;
  --progress-bar-height: 200px;
  --font-size: 2rem;
}

.circular-progress {
  width: var(--progress-bar-width);
  height: var(--progress-bar-height);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 30px;
}
.inner-circle {
  position: absolute;
  width: calc(var(--progress-bar-width) - 30px);
  height: calc(var(--progress-bar-height) - 30px);
  border-radius: 50%;
  background-color: lightgrey;
}

.percentage {
  position: relative;
  font-size: var(--font-size);
  color: rgb(0, 0, 0, 0.8);
}
.Income{
    color: green;
}
.Expense{
    color: red;
}
.ProgressBar{
    width: 100%;
     text-align: center;
     align-items: center; 
     justify-content: center;
     padding: 10px;
     margin-top: 30px;
}
h2
{
    text-align: center;
display: flex;text-align: center; justify-content: center;
padding: 20px;
}
    </style>
</head>
<body>
    {{> navbar}}
    
    <h2 >Total Turn Over: {{turnOver}}</h2>
    <div style="display: flex;text-align: center; justify-content: center;">
    <h2 style="padding: 20px;" class="Income">Income: {{totalCredit}}</h2>
    <h2 style="padding: 20px;" class="Expense">Expense: {{totalDebit}}</h2>
    </div>

    <div class="ProgressBar" style="display: flex;">
    <div class="circular-progress credit-progress" data-total-amount="{{totalCredit}}" data-progress-color="green" data-bg-color="lightgrey">
        <div class="inner-circle"></div>
        <p class="percentage">0%</p>
    </div>

    <div class="circular-progress debit-progress" data-total-amount="{{totalDebit}}" data-progress-color="red" data-bg-color="lightgrey">
        <div class="inner-circle"></div>
        <p class="percentage">0%</p>
    </div>
    </div>

    
     <h2>General Advice</h2>
    {{#if savingsRateIsGood}}
        <h2>With {{savingsRate}}% of income saved, You are in an excellent financial position. You are saving well above the recommended minimum of 20% and even surpassing the 30% mark, which is excellent.</h2>
        {{!-- //<p>Expenses are {{100 - savingsRate}}% of income, which is well within the healthy range. This user has a robust savings rate and good control over their expenses.</p> --}}
    {{!-- {{else}}
        <h2>You need to save more money. Try to increase your savings rate to at least 20% of your income.</h2>
    {{/if}} --}}


 {{!-- <script>
        document.addEventListener("DOMContentLoaded", function() {
            const creditProgress = document.querySelector(".credit-progress");
            const debitProgress = document.querySelector(".debit-progress");

            const createCircularProgress = (progressBar, percentage, progressColor) => {
                const progressValue = progressBar.querySelector(".percentage");
                const innerCircle = progressBar.querySelector(".inner-circle");

                let startValue = 0;
                const endValue = Math.round(percentage);
                const speed = 10; // Decreased speed value to make the progress bar load faster

                const progress = setInterval(() => {
                    startValue++;
                    progressValue.textContent = `${startValue}%`;
                    progressValue.style.color = progressColor;
                    innerCircle.style.backgroundColor = `lightgrey`;
                    progressBar.style.background = `conic-gradient(${progressColor} ${startValue * 3.6}deg, ${progressBar.getAttribute("data-bg-color")} 0deg)`;
                    if (startValue === endValue) {
                        clearInterval(progress);
                    }
                }, speed);
            };

            const totalCredit = parseInt(creditProgress.getAttribute("data-total-amount")) || 0;
            const totalDebit = parseInt(debitProgress.getAttribute("data-total-amount")) || 0;

              if (totalCredit > 0) {
                const debitPercentage = (totalDebit / totalCredit) * 100;
                const creditPercentage = 100 - debitPercentage;

                createCircularProgress(creditProgress, creditPercentage, "green");
                createCircularProgress(debitProgress, debitPercentage, "red");
            } else {
                createCircularProgress(creditProgress, 0, "green");
                createCircularProgress(debitProgress, 0, "red");
            }
        });
    </script> --}}




{{!-- </body>
</html> --}}  



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        /* Your existing CSS */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
        }
        :root {
            --progress-bar-width: 200px;
            --progress-bar-height: 200px;
            --font-size: 2rem;
        }
        .circular-progress {
            width: var(--progress-bar-width);
            height: var(--progress-bar-height);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 30px;
        }
        .inner-circle {
            position: absolute;
            width: calc(var(--progress-bar-width) - 30px);
            height: calc(var(--progress-bar-height) - 30px);
            border-radius: 50%;
            background-color: lightgrey;
        }
        .percentage {
            position: relative;
            font-size: var(--font-size);
            color: rgba(0, 0, 0, 0.8);
        }
        .Income {
            color: green;
        }
        .Expense {
            color: red;
        }
        .ProgressBar {
            width: 100%;
            text-align: center;
            align-items: center;
            justify-content: center;
            padding: 10px;
            margin-top: 30px;
        }
        h2 {
            text-align: center;
            display: flex;
            justify-content: center;
            padding: 20px;
        }
    </style>
</head>
<body>
    {{> navbar}}
    
    <h2>Total Turn Over: {{turnOver}}</h2>
    <div style="display: flex; justify-content: center;">
        <h2 class="Income" style="padding: 20px;">Income: {{totalCredit}}</h2>
        <h2 class="Expense" style="padding: 20px;">Expense: {{totalDebit}}</h2>
    </div>

    <div class="ProgressBar" style="display: flex;">
        <div class="circular-progress credit-progress" data-total-amount="{{totalCredit}}" data-progress-color="green" data-bg-color="lightgrey">
            <div class="inner-circle"></div>
            <p class="percentage">0%</p>
        </div>
        <div class="circular-progress debit-progress" data-total-amount="{{totalDebit}}" data-progress-color="red" data-bg-color="lightgrey">
            <div class="inner-circle"></div>
            <p class="percentage">0%</p>
        </div>
    </div>
    
    <h2>General Advice</h2>
    {{#if savingsRateIsGood}}
        <h2>With {{savingsRate}}% of income saved, You are in an excellent financial position. You are saving well above the recommended minimum of 20% and even surpassing the 30% mark, which is excellent.</h2>
    {{else}}
        <h2>You need to save more money. Try to increase your savings rate to at least 20% of your income.</h2>
    {{/if}}

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const creditProgress = document.querySelector(".credit-progress");
            const debitProgress = document.querySelector(".debit-progress");

            const createCircularProgress = (progressBar, percentage, progressColor) => {
                const progressValue = progressBar.querySelector(".percentage");
                const innerCircle = progressBar.querySelector(".inner-circle");

                let startValue = 0;
                const endValue = Math.round(percentage);
                const speed = 10; // Decreased speed value to make the progress bar load faster

                const progress = setInterval(() => {
                    startValue++;
                    progressValue.textContent = `${startValue}%`;
                    progressValue.style.color = progressColor;
                    innerCircle.style.backgroundColor = `lightgrey`;
                    progressBar.style.background = `conic-gradient(${progressColor} ${startValue * 3.6}deg, ${progressBar.getAttribute("data-bg-color")} 0deg)`;
                    if (startValue === endValue) {
                        clearInterval(progress);
                    }
                }, speed);
            };

            const totalCredit = parseInt(creditProgress.getAttribute("data-total-amount")) || 0;
            const totalDebit = parseInt(debitProgress.getAttribute("data-total-amount")) || 0;

            // Correcting the logic to prevent division by zero
            if (totalCredit >= 1) {
                const debitPercentage = (totalDebit / totalCredit) * 100;
                const creditPercentage = 100 - debitPercentage;

                createCircularProgress(creditProgress, creditPercentage, "green");
                createCircularProgress(debitProgress, debitPercentage, "red");
            } else {
                createCircularProgress(creditProgress, 0, "green");
                createCircularProgress(debitProgress, 0, "red");
            }
        });
    </script>
</body>
</html>


